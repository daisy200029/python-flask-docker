version: 2 # use CircleCI 2.0
jobs:
  test and deploy to Docker:
    docker:
      - image: circleci/python:2.7.14
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run:
          name: Setup Env
          command: |
            echo "IMAGE_TAG=0.1.${CIRCLE_BUILD_NUM}" >> staging.sh
            virtualenv python-flask-docker-env
            . python-flask-docker-env/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . python-flask-docker-env/bin/activate
            python unitTest.py
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and Push Docker Image
          command: |
            . python-flask-docker-env/bin/activate
            source staging.sh
            docker build -t ${DOCKER_LOGIN}/${IMAGE_NAME}:${IMAGE_TAG} .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ${DOCKER_LOGIN}/${IMAGE_NAME}:${IMAGE_TAG}
            
      
  deploy to staging:
    docker: 
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
            name: deploy to Google VM
            command: |
              source deploy_staging.sh
  deploy to prod:
    docker: 
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
            name: deploy to Google Managed Instance Group
            command: |
              source deploy_prod.sh
            

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test and deploy to Docker
      - deploy to staging: 
          requires:
            - test and deploy to Docker
      - deploy to prod: 
          requires:
            - deploy to staging